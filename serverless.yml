service: sample 
provider:
  name: aws
  runtime: nodejs8.10
  profile: ${env:AWS_PROFILE}
  region: ${env:MY_AWS_REGION}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "lambda:*"
      Resource:
        - "*"
    - Effect: Allow
      Action:
        - sqs:*
      Resource: arn:aws:sqs:${env:MY_AWS_REGION}:${env:AWS_ACCOUNTID}:${env:SQS_QUEUE_NAME}
plugins:
  - serverless-dotenv-plugin
  - serverless-sqs-alarms-plugin
  - serverless-offline
package:
  include:
    -utils/**
  exclude:
    - docs/**
    - helpers/**
    - node_modules/**
    - test/**
functions:
  hello:
    handler: src/handler.hello
    events:
      - http:
        path: message/{name} #this is the end point: http://localhost:3000/message => the name params will be in the event
        method: get

resources:
  Resources:

    MyQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${env:SQS_QUEUE_NAME}
        MessageRetentionPeriod: 1209600
        VisibilityTimeout: 60
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
            - MessagesDeadLetterQueue
            - Arn
          maxReceiveCount: 10

    MessagesDeadLetterQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${env:SQS_QUEUE_NAME}-dead-letter-queue
        MessageRetentionPeriod: 1209600

